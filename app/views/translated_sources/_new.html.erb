<%= tagged_tinymce_script %>

<% if @source.resource_type == 'Category'
     resource = Category.find(@source.resource_id)
     translated_path = category_source_translated_sources_path(@category,@source)
   else
     resource = Description.find(@source.resource_id)
     translated_path = category_description_source_translated_sources_path(@category, resource, @source)
   end %>
<h1><%= ts :for, :what => t('translat.ion').capitalize, :whom => "<em>MMS ##{h(@source.mms_id)}, #{formated_mms_pages(@source)}</em>" %></h1>
<%= error_messages_for :translated_source %>
<% remote_form_for(:translated_source, :url => translated_path, :before => "tinyMCE.triggerSave();document.getElementById(\'submit_button\').disabled = true;", :update => 'info') do |f| %>
  <p>
    <b>Language of Translation</b><br />
<%= f.select(:language_id, @languages.collect {|l| [ h(l.title), l.id ] }, { :include_blank => false }) %>
  </p>
  <p>
    <b>Translation</b><br />
<%= f.text_area :title, :rows => 16, :cols => 50, :class => 'mceEditor' %>
  </p>
  <p>
  <%= link_to_remote 'Add new Author', :url => { :action => 'add_author', :source_id => @source}, :update => 'update_div', :position => 'before', :method => 'get' %>
  </p>
  <div id="authors_div">
<% if @translated_source.authors.empty? && !current_user.person.nil? %>
<%=  render :partial => 'authors_selector', :locals => {:selected => current_user.person_id} %>
<% else
     for author in @translated_source.authors %>
<%=    render :partial => 'authors_selector', :locals => {:selected => author.id} %>
<%   end
   end %>
  </div>  
  <div id="update_div">  
  </div>
  <p>
<%= submit_tag te('create.record', :what => t('translat.ion')), language_options(:disabled_with => 'Posting...') %>
  </p>
<% end %>
<p>
<%= link_to_remote ts('cancel.this'), :url => category_child_path(@main_category, @category), :method => :get %>
</p>